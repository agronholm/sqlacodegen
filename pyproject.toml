[build-system]
requires = [
    "setuptools >= 64",
    "setuptools_scm[toml] >= 6.4"
]
build-backend = "setuptools.build_meta"

[project]
name = "sqlacodegen"
description = "Automatic model code generator for SQLAlchemy"
readme = "README.rst"
authors = [{name = "Alex GrÃ¶nholm", email = "alex.gronholm@nextday.fi"}]
keywords = ["sqlalchemy"]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Environment :: Console",
    "Topic :: Database",
    "Topic :: Software Development :: Code Generators",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.7"
dependencies = [
    "SQLAlchemy >= 1.4.36",
    "inflect >= 4.0.0",
    "importlib_metadata; python_version < '3.10'",
    "greenlet >= 3.0.0a1; python_version >= '3.12'",
]
dynamic = ["version"]

[project.urls]
"Bug Tracker" = "https://github.com/agronholm/sqlacodegen/issues"
"Source Code" = "https://github.com/agronholm/sqlacodegen"

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov",
    "psycopg2-binary",
    "mysql-connector-python",
]
sqlmodel = [
    "sqlmodel",
]
citext = ["sqlalchemy-citext >= 1.7.0"]

[project.entry-points."sqlacodegen.generators"]
tables = "sqlacodegen.generators:TablesGenerator"
declarative = "sqlacodegen.generators:DeclarativeGenerator"
dataclasses = "sqlacodegen.generators:DataclassGenerator"
sqlmodels = "sqlacodegen.generators:SQLModelGenerator"

[project.scripts]
sqlacodegen = "sqlacodegen.cli:main"

[tool.setuptools_scm]
version_scheme = "post-release"
local_scheme = "dirty-tag"

[tool.isort]
src_paths = ["src"]
skip_gitignore = true
profile = "black"

[tool.flake8]
max-line-length = 88

[tool.mypy]
python_version = "3.7"
strict = true
plugins = ["sqlalchemy.ext.mypy.plugin"]

[tool.pytest.ini_options]
addopts = "-rsx --tb=short"
testpaths = ["tests"]

[coverage.run]
source = ["sqlacodegen"]
relative_files = true

[coverage.report]
show_missing = true

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py37, py38, py39, py310, py311, py312
skip_missing_interpreters = true
isolated_build = true

[testenv]
extras = test
setenv =
  SQLALCHEMY_WARN_20 = true
commands = python -m pytest {posargs}
"""
