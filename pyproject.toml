[build-system]
requires = [
    "setuptools >= 64",
    "setuptools_scm[toml] >= 6.4"
]
build-backend = "setuptools.build_meta"

[project]
name = "sqlacodegen"
description = "Automatic model code generator for SQLAlchemy"
readme = "README.rst"
authors = [{name = "Alex GrÃ¶nholm", email = "alex.gronholm@nextday.fi"}]
keywords = ["sqlalchemy"]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Environment :: Console",
    "Topic :: Database",
    "Topic :: Software Development :: Code Generators",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.9"
dependencies = [
    "SQLAlchemy >= 2.0.23",
    "inflect >= 4.0.0",
    "importlib_metadata; python_version < '3.10'",
]
dynamic = ["version"]

[project.urls]
"Bug Tracker" = "https://github.com/agronholm/sqlacodegen/issues"
"Source Code" = "https://github.com/agronholm/sqlacodegen"

[project.optional-dependencies]
test = [
    "sqlacodegen[sqlmodel,pgvector]",
    "pytest >= 7.4",
    "coverage >= 7",
    "psycopg[binary]",
    "mysql-connector-python",
]
sqlmodel = ["sqlmodel >= 0.0.22"]
citext = ["sqlalchemy-citext >= 1.7.0"]
geoalchemy2 = ["geoalchemy2 >= 0.11.1"]
pgvector = ["pgvector >= 0.2.4"]

[project.entry-points."sqlacodegen.generators"]
tables = "sqlacodegen.generators:TablesGenerator"
declarative = "sqlacodegen.generators:DeclarativeGenerator"
dataclasses = "sqlacodegen.generators:DataclassGenerator"
sqlmodels = "sqlacodegen.generators:SQLModelGenerator"

[project.scripts]
sqlacodegen = "sqlacodegen.cli:main"

[tool.setuptools_scm]
version_scheme = "post-release"
local_scheme = "dirty-tag"

[tool.ruff]
src = ["src"]

[tool.ruff.lint]
extend-select = [
    "I",            # isort
    "ISC",          # flake8-implicit-str-concat
    "PGH",          # pygrep-hooks
    "RUF100",       # unused noqa (yesqa)
    "UP",           # pyupgrade
    "W",            # pycodestyle warnings
]

[tool.mypy]
strict = true

[tool.pytest.ini_options]
addopts = "-rsfE --tb=short"
testpaths = ["tests"]

[coverage.run]
source = ["sqlacodegen"]
relative_files = true

[coverage.report]
show_missing = true

[tool.tox]
env_list = ["py39", "py310", "py311", "py312", "py313"]
skip_missing_interpreters = true

[tool.tox.env_run_base]
package = "editable"
commands = [["python", "-m", "pytest", { replace = "posargs", extend = true }]]
extras = ["test"]
